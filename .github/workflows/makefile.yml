


jobs:
  build:
  
runs-on: ubuntu-latest

env:
  Rec_name: Ofox
  Rec_ver: "11.0"
  Rec_url: https://gitlab.com/OrangeFox/sync.git -b master
  device: RMX3085 
  DT_url: https://github.com/skyhuppa/Realme_8_RMX3085 -b test
  DT_path: device/realme/RMX3085 
  ProductFileHeader: twrp
  target: recoveryimage




      - name: "Cleanup Environment"
        uses: actions/checkout@v2

      - name: Initializing environment
        run: |
          echo "::group::Install Build Env Tool"
          sudo -E apt-get clean
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install curl libstdc++6 git wget repo rsync aria2
          echo "::endgroup::"
          git clone https://gitlab.com/OrangeFox/misc/scripts.git --depth=1 --single-branch
          cd scripts
          echo "::group::Setup Build Env"
          sudo -E bash setup/android_build_env.sh
          echo "::endgroup::"
          echo "::group::Install Android Sdk"
          sudo -E bash setup/install_android_sdk.sh
          echo "::endgroup::"

      - name: Sync recovery source
        run: |
          mkdir ${{env.WorkSpace}}
          git clone ${{env.Rec_url}} --depth=1 --single-branch
          cd sync
          echo "::group::Orangefox_sync help"
          ./orangefox_sync.sh --help
          sed -i 's/recurse-submodules/depth=1/g' orangefox_sync.sh
          echo "::endgroup::"
          echo "::group::Run Orangefox_sync.sh"
          ./orangefox_sync.sh --branch ${{env.Rec_ver}} --path ${{github.workspace}}/${{env.WorkSpace}} --ssh 0
          echo "::endgroup::"
          echo "::group::sync Orangefox"
          cd ${{github.workspace}}/${{env.WorkSpace}}
          repo sync -j4 --force-sync
          echo "::endgroup::"

      - name: Sync device tree
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{env.DT_url}} --depth=1 --single-branch ${{env.DT_path}}

      - name: Disable Crypto
        if: (github.event.inputs.crypto == 'true' && github.event.inputs.crypto  != 'false') || contains(github.event.action, 'crypto')
        run: |
          cd ${{env.WorkSpace}}/${{env.DT_path}}
          sed -i 's/TW_INCLUDE_CRYPTO := true/TW_INCLUDE_CRYPTO := false/g' BoardConfig.mk
          sed -i 's/TW_INCLUDE_CRYPTO_FBE := true/TW_INCLUDE_CRYPTO_FBE := false/g' BoardConfig.mk

      - name: Show tree
        run: tree -C -d -L 3
        
      - name: Build ${{env.Rec_name}}
        run: |
          cd ${{env.WorkSpace}}
          echo "::group::Run Envsetup.sh"
          source build/envsetup.sh
          echo "::endgroup::"
          echo "::group::Set EnvPath"
          export ALLOW_MISSING_DEPENDENCIES=true
          export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
          export LC_ALL="C"
          export OF_MAINTAINER="RC1844"
          export FOX_VERSION="Unofficial"
          export OF_SCREEN_H=2160
          export OF_PATCH_AVB20=1
          echo "::endgroup::"
          echo "::group::Lunch ${{env.ProductFileHeader}}_${{env.device}}-eng"
          lunch ${{env.ProductFileHeader}}_${{env.device}}-eng
          echo "::endgroup::"
          echo "::group::Sync"
          repo sync -j4
          echo "::endgroup::"
          echo "::group::Build ${{env.Rec_name}}"
          mka ${{env.target}}
          echo "::endgroup::"
        
      - echo " ===+++ Uploading Recovery +++==="
      cd out/target/product/$DEVICE
      ofoxzip="$(ls OrangeFox-*-RMX3085 .zip)"
      curl -T $ofoxzip https://oshi.at
      #curl -F "file=@${ofoxzip}" https://file.io
      #curl --upload-file $ofoxzip http://transfer.sh/
