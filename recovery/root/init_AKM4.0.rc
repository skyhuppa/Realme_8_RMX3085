import /init.recovery.${ro.hardware}.rc
import /system/etc/init.aging.rc

on early-init
    # Set the security context of /postinstall if present.
    restorecon /postinstall

    start ueventd
    start healthd

    setprop sys.usb.configfs 0

on init
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    export LD_LIBRARY_PATH .:/sbin

    symlink /proc/self/fd/0 /dev/stdin
    symlink /proc/self/fd/1 /dev/stdout
    symlink /proc/self/fd/2 /dev/stderr

    symlink /system/etc /etc

    # Mount binderfs
    mkdir /dev/binderfs
    mount binder binder /dev/binderfs stats=global
    chmod 0755 /dev/binderfs

    # Mount fusectl
    mount fusectl none /sys/fs/fuse/connections

    symlink /dev/binderfs/binder /dev/binder
    symlink /dev/binderfs/hwbinder /dev/hwbinder
    symlink /dev/binderfs/vndbinder /dev/vndbinder

    chmod 0666 /dev/binderfs/hwbinder
    chmod 0666 /dev/binderfs/binder
    chmod 0666 /dev/binderfs/vndbinder

    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    mkdir /sdcard
    mkdir /external_sd
    #Shuangquan.Du@PSW.AD.Recovery.0, 2018/07/21, Add for usb otg
    mkdir /usb_otg
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mkdir /mnt/system
    mount tmpfs tmpfs /tmp size=80%

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/vm/max_map_count 1000000

    #Fangfang.Hui@PSW.AD.Ota.1122242, 2016/08/15, Add for check and autorepair ext4 filesystem partitions in recovery mode
    exec /sbin/e2fsck -y /dev/block/platform/mtk-msdc.0/by-name/cache
    exec /sbin/e2fsck -y /dev/block/platform/mtk-msdc.0/by-name/userdata

    #mount ext4 /dev/block/bootdevice/by-name/userdata /data rw
    setprop persist.sys.firstlaunch false

    #ifndef VENDOR_EDIT
    #Yang.Li@ANDROID.STORAGE, 2017/12/19, Remove for can't umount /vendor in OTA update
    mkdir /mnt/vendor/persist/mcRegistry
    #mount ext4 /dev/block/platform/bootdevice/by-name/vendor  /vendor rw
    #mount ext4 /dev/block/platform/bootdevice/by-name/system  /system rw
    mkdir /mnt/vendor/persist
    mount ext4 /dev/block/by-name/persist /mnt/vendor/persist rw
    #setprop vendor.gatekeeper.disable_spu true
    #endif /* VENDOR_EDIT */
on boot
    ifup lo
    hostname localhost
    domainname localdomain
    exec u:r:recovery:s0 root root -- /system/bin/cp -af /res/${ro.product.brand.ui:-ColorOS}/. /res
    exec u:r:recovery:s0 root root -- /system/bin/cp -arf /vendor/app/mcRegistry/. /odm/vendor/app/mcRegistry/
    class_start default

on boot && property:ro.crypto.state=encrypted && property:ro.crypto.type=file
    load_fastboot_adb_props

# Load properties from /system/ + /factory after fs mount.
on load_system_props_action
    load_system_props

on load_persist_props_action
    load_persist_props

on firmware_mounts_complete
   rm /dev/.booting

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_system_props_action
    trigger load_persist_props_action

    # Remove a file to wake up anything waiting for firmware
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

#on property:sys.powerctl=*
#   powerctl ${sys.powerctl}

service console /system/bin/sh
    class core
    console
    user root
    group shell log readproc
    seclabel u:r:recovery:s0

service ueventd /system/bin/ueventd
    critical
    seclabel u:r:recovery:s0

service healthd /system/bin/android.hardware.health@2.1-service -r
    seclabel u:r:recovery:s0

service charger /system/bin/charger
    seclabel u:r:recovery:s0

service recovery /system/bin/recovery
    socket recovery stream 422 system system
    seclabel u:r:recovery:s0

service adbd /system/bin/adbd --root_seclabel=u:r:recovery:s0 --device_banner=recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:recovery:s0

service logd /system/bin/logd
    class core
    socket logd stream 0666 logd logd
    socket logdr seqpacket 0666 logd logd
    socket logdw dgram 0222 logd logd
    group root system
    seclabel u:r:recovery:s0

service fastbootd /system/bin/fastbootd
    disabled
    group system
    seclabel u:r:recovery:s0

# Restart adbd so it can run as root
on property:service.adb.root=1
    restart adbd

# Always start adbd on userdebug and eng builds
on fs && property:ro.debuggable=1
    setprop sys.usb.config adb

on fs && property:sys.usb.configfs=1
    mount configfs none /config
    mkdir /config/usb_gadget/g1 0770 shell shell
    write /config/usb_gadget/g1/idVendor 0x18D1
    mkdir /config/usb_gadget/g1/strings/0x409 0770
    write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
    write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
    write /config/usb_gadget/g1/strings/0x409/product ${ro.product.model}
    mkdir /config/usb_gadget/g1/functions/ffs.adb
    mkdir /config/usb_gadget/g1/functions/ffs.fastboot
    mkdir /config/usb_gadget/g1/configs/b.1 0777 shell shell
    mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770 shell shell

on fs && property:sys.usb.configfs=0
    write /sys/class/android_usb/android0/f_ffs/aliases adb,fastboot
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}

on fs
    mkdir /dev/usb-ffs 0775 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    write /sys/class/power_supply/usb/otg_switch 1
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    mkdir /dev/usb-ffs/fastboot 0770 system system
    mount functionfs fastboot /dev/usb-ffs/fastboot rmode=0770,fmode=0660,uid=1000,gid=1000

on property:sys.usb.config=adb
    start adbd
    start console
    start logd

on property:sys.usb.config=fastboot
    start fastbootd

on property:sys.usb.config=none && property:sys.usb.configfs=0
    stop adbd
    stop fastboot
    write /sys/class/android_usb/android0/enable 0
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=adb && property:sys.usb.configfs=0
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=sideload && property:sys.usb.configfs=0
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=fastboot && property:sys.usb.configfs=0
    write /sys/class/android_usb/android0/idProduct 4EE0
    write /sys/class/android_usb/android0/functions fastboot
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# Configfs triggers
on property:sys.usb.config=none && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/UDC "none"
    stop adbd
    stop fastbootd
    setprop sys.usb.ffs.ready 0
    rm /config/usb_gadget/g1/configs/b.1/f1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=sideload && property:sys.usb.ffs.ready=1 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/idProduct 0xD001
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "adb"
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=adb && property:sys.usb.ffs.ready=1 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/idProduct 0xD001
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "adb"
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=fastboot && property:sys.usb.ffs.ready=1 && property:sys.usb.configfs=1
    write /config/usb_gadget/g1/idProduct 0x4EE0
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "fastboot"
    symlink /config/usb_gadget/g1/functions/ffs.fastboot /config/usb_gadget/g1/configs/b.1/f1
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}

#Add for OPPO FBE
service vendor.gatekeeper-1-0 /vendor/bin/hw/android.hardware.gatekeeper@1.0-service
    seclabel u:r:recovery:s0

service gatekeeperd /system/bin/gatekeeperd /data/misc/gatekeeper
    seclabel u:r:recovery:s0

service hal_cryptoeng_oppo /system/bin/hw/vendor.oplus.hardware.cryptoeng@1.0-service
    seclabel u:r:recovery:s0

service keymaster-4-0 /system/bin/android.hardware.keymaster@4.0-service.trustonic
    seclabel u:r:recovery:s0

service hwservicemanager /system/bin/hwservicemanager
    onrestart setprop hwservicemanager.ready false
    writepid /dev/cpuset/system-background/tasks
    seclabel u:r:recovery:s0
#xiaofan.yang@PSW.TECH.AgingTest, 2019/02/14,Add for factory agingtest
#ifdef COLOROS_EDIT
#Zhengkang.Ji@Plf.Framework, 2018.02.10 add for system repair
service wmt_loader /vendor/bin/wmt_loader
    class main
    user system
    group system
    oneshot
    seclabel u:r:recovery:s0

service wmt_launcher  /vendor/bin/wmt_launcher -p /vendor/firmware/
    class main
    user system
    group system
    oneshot
    seclabel u:r:recovery:s0

service netd /system/bin/netd
    class main
    socket netd stream 0660 root system
    socket dnsproxyd stream 0660 root inet
    socket mdns stream 0660 root system
    socket fwmarkd stream 0660 root inet


service vndservicemanager /vendor/bin/vndservicemanager /dev/vndbinder
    writepid /dev/cpuset/system-background/tasks
    seclabel u:r:recovery:s0

service wpa_supplicant /vendor/bin/hw/wpa_supplicant \
    -Dnl80211 -iwlan0 -dd -O/data/misc/wifi/sockets \
    -c/data/misc/wifi/wpa_supplicant.conf
    disabled
    oneshot
    seclabel u:r:recovery:s0

service servicemanager /system/bin/servicemanager
    group system readproc
    writepid /dev/cpuset/system-background/tasks
    seclabel u:r:recovery:s0

service mobicore /vendor/bin/mcDriverDaemon --P1 /mnt/vendor/persist/mcRegistry \
    -r /vendor/app/mcRegistry/020f0000000000000000000000000000.drbin \
    -r /vendor/app/mcRegistry/05120000000000000000000000000000.drbin \
    -r /vendor/app/mcRegistry/020b0000000000000000000000000000.drbin \
    -r /odm/vendor/app/mcRegistry/05070000000000000000000000000000.drbin \
    -r /odm/vendor/app/mcRegistry/030b0000000000000000000000000000.drbin \
    -r /odm/vendor/app/mcRegistry/030c0000000000000000000000000000.drbin \
    -r /vendor/app/mcRegistry/07060000000000000000000000007169.drbin \
    -r /vendor/app/mcRegistry/40188311faf343488db888ad39496f9a.drbin \
    -r /vendor/app/mcRegistry/06090000000000000000000000000000.drbin \
    -r /vendor/app/mcRegistry/0f5eed3c3b5a47afacca69a84bf0efad.drbin \
    -r /vendor/app/mcRegistry/07407000000000000000000000000000.drbin \
    -r /vendor/app/mcRegistry/9073f03a9618383bb1856eb3f990babd.drbin \
    -r /vendor/app/mcRegistry/6b3f5fa0f8cf55a7be2582587d62d63a.drbin \
    -r /vendor/app/mcRegistry/5020170115e016302017012521300000.drbin \
    -r /odm/vendor/app/mcRegistry/09070000000000000000000000000000.drbin
    seclabel u:r:recovery:s0

on property:recovery.reload.persist=trigger_reload_persist
    load_persist_props

on property:enable.fbe.service=0
    stop hal_cryptoeng_oppo
    stop mobicore
    stop servicemanager
    stop hwservicemanager
    stop keymaster-4-0
    stop gatekeeperd
    stop vendor.gatekeeper-1-0

service conninfra_loader /vendor/bin/conninfra_loader
    seclabel u:r:recovery:s0

service wlan_assistant /vendor/bin/wlan_assistant
    seclabel u:r:recovery:s0
    class main
    user wifi
    group system gps inet

on property:vendor.connsys.driver.ready=yes
   start conninfra_loader
   start wlan_assistant
   insmod /vendor/lib/modules/conninfra.ko
   insmod /vendor/lib/modules/bt_drv.ko
   insmod /vendor/lib/modules/wlan_drv_gen3.ko
   insmod /vendor/lib/modules/wmt_chrdev_wifi.ko
   insmod /vendor/lib/modules/wlan_drv_gen4m.ko
